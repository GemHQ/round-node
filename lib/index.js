// Generated by CoffeeScript 1.8.0
(function() {
  var Client, Context, NETWORKS, Patchboard, Promise;

  Patchboard = require("patchboard-js");

  Promise = require("bluebird");

  Patchboard.discover = Promise.promisify(Patchboard.discover);

  Context = require("./context");

  Client = require("./client");

  NETWORKS = {
    testnet: "bitcoin_testnet",
    bitcoin_testnet: "bitcoin_testnet",
    testnet3: "bitcoin_testnet",
    bitcoin: "bitcoin",
    mainnet: "bitcoin"
  };

  module.exports = {
    client: function(_arg) {
      var schemes, url;
      url = _arg.url, schemes = _arg.schemes;
      if (this.patchboard != null) {
        return Promise.resolve(new Client(this.patchboard.spawn()));
      } else {
        if (url == null) {
          url = "https://api.gem.co";
        }
        if (schemes != null) {
          Context = Context.bind(null, schemes);
        }
        return Patchboard.discover(url, {
          context: Context
        }).then((function(_this) {
          return function(patchboard) {
            _this.patchboard = patchboard;
            return new Client(_this.patchboard);
          };
        })(this))["catch"](function(error) {
          throw new Error(error);
        });
      }
    }
  };

}).call(this);
