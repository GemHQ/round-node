// Generated by CoffeeScript 1.9.2
(function() {
  var Base,
    hasProp = {}.hasOwnProperty;

  module.exports = Base = (function() {
    function Base() {}

    Base.prototype.getAssociatedCollection = function(arg) {
      var callback, collectionClass, collectionInstance, name, options, resource;
      collectionClass = arg.collectionClass, name = arg.name, resource = arg.resource, options = arg.options, callback = arg.callback;
      if (this["_" + name] != null) {
        return callback(null, this["_" + name]);
      }
      resource = resource || this.resource[name];
      collectionInstance = new collectionClass({
        resource: resource,
        client: this.client,
        options: options
      });
      return collectionInstance.loadCollection(function(error, collectionInstance) {
        if (error) {
          return callback(error);
        }
        this["_" + name] = collectionInstance;
        return callback(null, collectionInstance);
      });
    };

    Base.prototype.update = function(content, callback) {
      return this.resource.update(content, (function(_this) {
        return function(error, resource) {
          var key, val;
          if (error) {
            return callback(error);
          }
          _this.resource = resource;
          for (key in content) {
            if (!hasProp.call(content, key)) continue;
            val = content[key];
            _this[key] = val;
          }
          return callback(null, _this);
        };
      })(this));
    };

    return Base;

  })();

}).call(this);
