// Generated by CoffeeScript 1.8.0
(function() {
  var Payment, PaymentGenerator;

  Payment = require('./payment');

  module.exports = PaymentGenerator = (function() {
    function PaymentGenerator(paymentsResource, client) {
      this.resource = function() {
        return paymentsResource;
      };
      this.client = function() {
        return client;
      };
    }

    PaymentGenerator.prototype.unsigned = function(payees, confirmations, callback) {
      var outputs;
      if (payees == null) {
        return callback(new Error('Must supply a list of payees'));
      }
      confirmations || (confirmations = 6);
      outputs = this.outputsFromPayees(payees);
      return this.resource().create({
        outputs: outputs,
        confirmations: confirmations
      }, (function(_this) {
        return function(error, paymentResource) {
          if (error) {
            return callback(error);
          }
          return callback(null, new Payment(paymentResource, _this.client()));
        };
      })(this));
    };

    PaymentGenerator.prototype.outputsFromPayees = function(payees) {
      var outputs;
      if (!Array.isArray(payees)) {
        throw new Error('Payees must be an array');
      }
      outputs = payees.map(function(payee) {
        if (payee.amount == null) {
          throw new Error('Bad output, no amount');
        }
        if (payee.address == null) {
          throw new Error('Bad output, no address');
        }
        return {
          amount: payee.amount,
          payee: {
            address: payee.address
          }
        };
      });
      return outputs;
    };

    return PaymentGenerator;

  })();

}).call(this);
