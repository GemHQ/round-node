// Generated by CoffeeScript 1.9.1
(function() {
  var Collection, Transaction, Transactions,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Transaction = require('./transaction');

  Collection = require('./collection');

  module.exports = Transactions = (function(superClass) {
    extend(Transactions, superClass);

    function Transactions() {
      return Transactions.__super__.constructor.apply(this, arguments);
    }

    Transactions.prototype.type = Transaction;

    Transactions.prototype.create = function(arg, callback) {
      var confirmations, payees, redirect_uri;
      payees = arg.payees, confirmations = arg.confirmations, redirect_uri = arg.redirect_uri;
      if (!payees) {
        return callback(new Error('Must have a list of payees'));
      }
      if (confirmations == null) {
        confirmations = 6;
      }
      return this.resource.create({
        utxo_confirmations: confirmations,
        payees: payees,
        redirect_uri: redirect_uri
      }, (function(_this) {
        return function(error, resource) {
          var payment;
          if (error) {
            return callback(error);
          }
          payment = new Transaction({
            resource: resource,
            client: _this.client
          });
          return callback(null, payment);
        };
      })(this));
    };

    return Transactions;

  })(Collection);

}).call(this);
