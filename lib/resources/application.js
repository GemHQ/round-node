// Generated by CoffeeScript 1.9.1
(function() {
  var Application, Base, TOTP, Users, Wallets,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Users = require('./users');

  Wallets = require('./wallets');

  Base = require('./base');

  TOTP = require('onceler').TOTP;

  module.exports = Application = (function(superClass) {
    extend(Application, superClass);

    function Application(arg) {
      var client, resource, totp_secret;
      resource = arg.resource, client = arg.client, totp_secret = arg.totp_secret;
      this.resource = resource;
      this.client = client;
      this.totp_secret = totp_secret;
      this.name = resource.name, this.api_token = resource.api_token, this.url = resource.url;
    }

    Application.prototype.authorize_instance = function(arg, callback) {
      var name;
      name = arg.name;
      return this.resource.authorize_instance(arguments[0], function(error, instance) {
        return callback(error, instance);
      });
    };

    Application.prototype.users = function(callback) {
      return this.getAssociatedCollection({
        collectionClass: Users,
        name: 'users',
        callback: callback
      });
    };

    Application.prototype.wallets = function(callback) {
      return this.getAssociatedCollection({
        collectionClass: Wallets,
        name: 'wallets',
        options: {
          application: this
        },
        callback: callback
      });
    };

    Application.prototype.get_mfa = function() {
      return new TOTP(this.totp_secret).now();
    };

    return Application;

  })(Base);

}).call(this);
