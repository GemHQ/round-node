// Generated by CoffeeScript 1.9.2
(function() {
  var Account, Accounts, Collection, VALID_NETWORKS,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Account = require('./account');

  Collection = require('./collection');

  VALID_NETWORKS = ['bitcoin', 'bitcoin_testnet', 'litecoin', 'dogecoin'];

  module.exports = Accounts = (function(superClass) {
    extend(Accounts, superClass);

    function Accounts() {
      return Accounts.__super__.constructor.apply(this, arguments);
    }

    Accounts.prototype.type = Account;

    Accounts.prototype.key = 'name';

    Accounts.prototype.create = function(arg, callback) {
      var name, network;
      name = arg.name, network = arg.network;
      if (VALID_NETWORKS.indexOf(network) < 0) {
        return callback(new Error("Network must be one of the following: " + (VALID_NETWORKS.join(' '))));
      }
      return this.resource.create(arguments[0], (function(_this) {
        return function(error, resource) {
          var account;
          if (error) {
            return callback(error);
          }
          account = new Account({
            resource: resource,
            client: _this.client,
            wallet: _this.wallet
          });
          _this.add(account);
          return callback(null, account);
        };
      })(this));
    };

    return Accounts;

  })(Collection);

}).call(this);
