// Generated by CoffeeScript 1.8.0
(function() {
  var Account, Accounts, Collection,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Account = require('./account');

  Collection = require('./collection');

  module.exports = Accounts = (function(_super) {
    __extends(Accounts, _super);

    function Accounts(resource, client, wallet) {
      this.wallet = wallet;
      Accounts.__super__.constructor.apply(this, arguments);
    }

    Accounts.prototype.type = Account;

    Accounts.prototype.key = 'name';

    Accounts.prototype.create = function(content, callback) {
      return this.resource().create(content, (function(_this) {
        return function(error, accountResource) {
          var account;
          if (error) {
            return callback(error);
          }
          account = new Account(accountResource, _this.client(), _this.wallet);
          _this.add(content.name, account);
          return callback(null, account);
        };
      })(this));
    };

    return Accounts;

  })(Collection);

}).call(this);
