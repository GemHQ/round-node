// Generated by CoffeeScript 1.9.2
(function() {
  var Address, Addresses, Collection,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Address = require('./address');

  Collection = require('./collection');

  module.exports = Addresses = (function(superClass) {
    extend(Addresses, superClass);

    function Addresses() {
      return Addresses.__super__.constructor.apply(this, arguments);
    }

    Addresses.prototype.type = Address;

    Addresses.prototype.create = function(callback) {
      return this.resource.create((function(_this) {
        return function(error, resource) {
          var address;
          if (error) {
            return callback(error);
          }
          address = new Address({
            resource: resource,
            client: _this.client
          });
          _this.add(address);
          return callback(null, address);
        };
      })(this));
    };

    return Addresses;

  })(Collection);

}).call(this);
