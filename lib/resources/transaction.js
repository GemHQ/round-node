// Generated by CoffeeScript 1.9.2
(function() {
  var Transaction;

  module.exports = Transaction = (function() {
    function Transaction(_arg) {
      var client, resource;
      resource = _arg.resource, client = _arg.client;
      this.client = client;
      this.resource = resource;
      this.data = resource.data, this.confirmations = resource.confirmations, this.hash = resource.hash;
    }

    Transaction.prototype.sign = function(_arg, callback) {
      var signature, signatures, txContent, txHash, wallet, _ref;
      wallet = _arg.wallet;
      if (this.resource.status !== 'unsigned') {
        callback(new Error('Transaction is already signed'));
      }
      if (wallet == null) {
        callback(new Error('A wallet is required to sign a transaction'));
      }
      _ref = wallet.prepareTransaction(this.resource), signatures = _ref.signatures, txHash = _ref.txHash;
      signature = signatures[0];
      txContent = {
        transaction_hash: txHash,
        inputs: [
          {
            primary: signature
          }
        ]
      };
      return this.resource.update(txContent, (function(_this) {
        return function(error, resource) {
          console.log("+++++++++++++++++++++++++++++++");
          console.log(error);
          console.log("+++++++++++++++++++++++++++++++");
          if (error) {
            return callback(error);
          }
          _this.resource = resource;
          return callback(null, _this);
        };
      })(this));
    };

    Transaction.prototype.approve = function(_arg, callback) {
      var mfa_token;
      mfa_token = _arg.mfa_token;
      this.client.context.setMFA(mfa_token);
      return this.resource.approve(function(error, data) {
        return callback(error, data);
      });
    };

    return Transaction;

  })();

}).call(this);
