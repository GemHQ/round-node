// Generated by CoffeeScript 1.8.0
(function() {
  var Applications, Developer;

  Applications = require('./applications');

  module.exports = Developer = (function() {
    function Developer(resource, client, options) {
      this.client = function() {
        return client;
      };
      this.resource = function() {
        return resource;
      };
    }

    Developer.prototype.applications = function(callback) {
      var applications, resource;
      if (this._applications) {
        return callback(null, this._applications);
      }
      resource = this.resource().applications;
      applications = new Applications(resource, this.client());
      return applications.loadCollection((function(_this) {
        return function(error, applications) {
          if (error) {
            return callback(error);
          }
          _this._applications = applications;
          return callback(null, _this._applications);
        };
      })(this));
    };

    Developer.prototype.update = function(credentials, callback) {
      var privkey;
      privkey = credentials.privkey;
      if (credentials.privkey) {
        delete credentials.privkey;
      }
      return this.resource().update(credentials, (function(_this) {
        return function(error, developerResource) {
          if (error) {
            return callback(error);
          }
          _this.resource = function() {
            return developerResource;
          };
          credentials.privkey = privkey;
          _this.client().patchboard().context.authorize('Gem-Developer', credentials);
          return callback(null, _this);
        };
      })(this));
    };

    return Developer;

  })();

}).call(this);
